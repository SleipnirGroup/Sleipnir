name: Build

on: [pull_request, push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-native:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows x86_64
            os: windows-2022
            cmake-args:
          - name: Linux x86_64
            os: ubuntu-22.04
            cmake-args:
          - name: macOS universal
            os: macOS-14
            cmake-args: -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"

    name: ${{ matrix.name }} - native
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - run: cmake -B build -S . -DBUILD_EXAMPLES=ON ${{ matrix.cmake-args }}
      - run: cmake --build build --config RelWithDebInfo --parallel $(nproc)
      - run: ctest -C RelWithDebInfo --output-on-failure
        working-directory: build
      - run: cmake --install build --config RelWithDebInfo --prefix pkg

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }} - native
          path: pkg

  build-python-wheel:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows x86_64
            os: windows-2022
            version: "3.9"
            cmake-env:
          - name: Windows x86_64
            os: windows-2022
            version: "3.10"
            cmake-env:
          - name: Windows x86_64
            os: windows-2022
            version: "3.11"
            cmake-env:
          - name: Windows x86_64
            os: windows-2022
            version: "3.12"
            cmake-env:
          - name: Linux x86_64
            os: ubuntu-22.04
            version: "3.9"
            cmake-env:
          - name: Linux x86_64
            os: ubuntu-22.04
            version: "3.10"
            cmake-env:
          - name: Linux x86_64
            os: ubuntu-22.04
            version: "3.11"
            cmake-env:
          - name: Linux x86_64
            os: ubuntu-22.04
            version: "3.12"
            cmake-env:
          - name: macOS universal
            os: macOS-14
            version: "3.10"
            cmake-env: CMAKE_OSX_ARCHITECTURES="x86_64;arm64"
          - name: macOS universal
            os: macOS-14
            version: "3.11"
            cmake-env: CMAKE_OSX_ARCHITECTURES="x86_64;arm64"
          - name: macOS universal
            os: macOS-14
            version: "3.12"
            cmake-env: CMAKE_OSX_ARCHITECTURES="x86_64;arm64"

    name: ${{ matrix.name }} - Python ${{ matrix.version }} wheel
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}

      - run: python3 ./tools/update_version.py
      - run: pip3 install build tox
      - run: ${{ matrix.cmake-env }} python3 -m build --wheel
      - run: python3 ../.github/workflows/repair_wheel.py sleipnirgroup_jormungandr-*.whl
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
        working-directory: dist
      - run: python3 -m tox -e ${{ matrix.version }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }} - Python ${{ matrix.version }} wheel
          path: dist

  build-python-sdist:
    timeout-minutes: 10

    name: Python sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - run: python3 ./tools/update_version.py
      - run: pip3 install build tox
      - run: python3 -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: Python sdist
          path: dist

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-22.04
    needs: [build-python-wheel, build-python-sdist]
    if: github.repository_owner == 'SleipnirGroup' && github.ref == 'refs/heads/main'
    environment:
      name: pypi
      url: https://pypi.org/p/sleipnirgroup-jormungandr
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: '* - Python * wheel'
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: 'Python sdist'
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  build-cross:
    strategy:
      fail-fast: false
      matrix:
        include:
          - artifact-name: roboRIO
            container: wpilib/roborio-cross-ubuntu:2024-22.04
            toolchain: /usr/local/toolchain-config.cmake

    name: ${{ matrix.artifact-name }}
    runs-on: ubuntu-22.04
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4

      - run: cmake -B build -S . --toolchain ${{ matrix.toolchain }} -DBUILD_EXAMPLES=ON
      - run: cmake --build build --config RelWithDebInfo --parallel $(nproc)
      - run: cmake --install build --config RelWithDebInfo --prefix pkg

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: pkg

  build-wasm:
    name: Wasm
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: numworks/setup-emscripten@latest

      - run: emcmake cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF
      - run: cmake --build build --config Release --parallel $(nproc)
      - run: cmake --install build --config Release --prefix pkg

      - uses: actions/upload-artifact@v4
        with:
          name: Wasm
          path: pkg
