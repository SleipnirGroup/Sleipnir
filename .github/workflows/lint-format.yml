name: Lint and Format

on: [pull_request, push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  pybind11_mkdoc:
    name: "pybind11_mkdoc"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install LLVM 20
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20 all
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-20 200
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-20 200
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CXXFLAGS=-stdlib=libc++" >> $GITHUB_ENV

      - run: pip3 install --user --break-system-packages pybind11_mkdoc clang==20.1.5

      - run: cmake -B build -S . -DBUILD_PYTHON=ON

      # Ensures _jormungandr_docstrings rule runs
      - run: cmake --build build -t clean

      - run: cmake --build build -t _jormungandr_docstrings

      - name: Check output
        run: git --no-pager diff --exit-code HEAD

      - name: Generate diff
        run: git diff HEAD > pybind11_mkdoc-fixes.patch
        if: ${{ failure() }}

      - uses: actions/upload-artifact@v4
        with:
          name: pybind11_mkdoc fixes
          path: pybind11_mkdoc-fixes.patch
        if: ${{ failure() }}

      - name: Write to job summary
        run: |
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          cat pybind11_mkdoc-fixes.patch >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        if: ${{ failure() }}

  wpiformat:
    name: "wpiformat"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all history and metadata
        run: |
          git checkout -b pr
          git branch -f main origin/main

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - run: pip3 install wpiformat==2025.33

      - run: wpiformat

      - name: Check output
        run: git --no-pager diff --exit-code HEAD

      - name: Generate diff
        run: git diff HEAD > wpiformat-fixes.patch
        if: ${{ failure() }}

      - uses: actions/upload-artifact@v4
        with:
          name: wpiformat fixes
          path: wpiformat-fixes.patch
        if: ${{ failure() }}

      - name: Write to job summary
        run: |
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          cat wpiformat-fixes.patch >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        if: ${{ failure() }}

  tidy:
    name: "clang-tidy"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all history and metadata
        run: |
          git config --global --add safe.directory /__w/Sleipnir/Sleipnir
          git checkout -b pr
          git branch -f main origin/main

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install LLVM 20
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20 all
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-20 200
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-20 200
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CXXFLAGS=-stdlib=libc++" >> $GITHUB_ENV

      - run: pip3 install wpiformat==2025.33

      - name: Create compile_commands.json
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=YES

      - name: List changed files
        run: wpiformat -list-changed-files

      - name: Run clang-tidy
        run: wpiformat -no-format -tidy-all -compile-commands=build -tidy-extra-args std=c++23 -vv
