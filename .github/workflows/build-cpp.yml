name: Build C++

on: [pull_request, push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows x86_64
            os: windows-2022
            cmake-args:
          - name: Linux x86_64
            os: ubuntu-24.04
            cmake-args:
          - name: Linux aarch64
            os: ubuntu-24.04-arm
            cmake-args:
          - name: macOS universal
            os: macOS-14
            cmake-args: -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
          - name: Linux x86_64 (disable diagnostics)
            os: ubuntu-24.04
            cmake-args: -DDISABLE_DIAGNOSTICS=ON
          - name: Linux aarch64 (disable diagnostics)
            os: ubuntu-24.04-arm
            cmake-args: -DDISABLE_DIAGNOSTICS=ON

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Make GCC 14 the default toolchain (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 200
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 200

      - run: sudo xcode-select -switch /Applications/Xcode_15.3.app
        if: startsWith(matrix.os, 'macOS')

      - run: cmake -B build -S . -DBUILD_EXAMPLES=ON ${{ matrix.cmake-args }}
      - run: cmake --build build --config RelWithDebInfo --parallel 4
      - run: ctest --test-dir build -C RelWithDebInfo --output-on-failure
      - run: cmake --install build --config RelWithDebInfo --prefix pkg

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: pkg
